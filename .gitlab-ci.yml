variables:
  public_docker_image: docker.io/tezos/tezos

stages:
  - build
  - test
  - publish
  - deploy
  - cleanup

## Template for `docker_in_docker` jobs

.dind_template: &dind_definition
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "${CI_REGISTRY}"
  tags:
    - docker

## Tezos

build:
  <<: *dind_definition
  stage: build
  script:
    ## Building dependencies...
    - ./scripts/create_docker_image.build_deps.sh
        "build_deps" "${CI_BUILD_REF}"
        "${CI_REGISTRY_IMAGE}/build_deps:${CI_BUILD_REF_NAME}"
        "${CI_REGISTRY_IMAGE}/build_deps:master"
    ## Saving the docker image...
    - if [ "${CI_PROJECT_PATH}" = "tezos/tezos" ] &&
         [ "${CI_BUILD_REF_NAME}" = "master" ] ; then
        docker tag "build_deps:${CI_BUILD_REF}"
                   "${CI_REGISTRY_IMAGE}/build_deps:master" ;
        docker push "${CI_REGISTRY_IMAGE}/build_deps:master" ;
      fi
    ## Preparing sources for the alphanet or the zeronet...
    - if [ "${CI_PROJECT_PATH}" = "tezos/tezos" ] ; then
        ./scripts/apply_patch.sh "${CI_BUILD_REF_NAME}" ;
      fi
    ## Building...
    - ./scripts/create_docker_image.build.sh
        "${CI_REGISTRY_IMAGE}/build" "${CI_BUILD_REF}"
        "build_deps:${CI_BUILD_REF}"
    ## Saving the docker image...
    - docker push "${CI_REGISTRY_IMAGE}/build:${CI_BUILD_REF}"

## Basic tests

.test_template: &test_definition
  stage: test
  image: ${CI_REGISTRY_IMAGE}/build:${CI_BUILD_REF}
  before_script:
    - cd /home/opam/tezos
  dependencies:
    - build

test:utils:data-encoding:
  <<: *test_definition
  script:
    - make -C test/utils run-test-data-encoding

test:utils:merkle:
  <<: *test_definition
  script:
    - make -C test/utils run-test-merkle

test:shell:store:
  <<: *test_definition
  script:
    - make -C test/shell run-test-store

test:shell:context:
  <<: *test_definition
  script:
    - make -C test/shell run-test-context

test:shell:state:
  <<: *test_definition
  script:
    - make -C test/shell run-test-state

test:p2p:io-scheduler:
  <<: *test_definition
  script:
    - make -C test/p2p run-test-p2p-io-scheduler

test:p2p:connection:
  <<: *test_definition
  script:
    - make -C test/p2p run-test-p2p-connection

test:p2p:connection-pool:
  <<: *test_definition
  script:
    - make -C test/p2p run-test-p2p-connection-pool

test:proto_alpha:transactions:
  <<: *test_definition
  script:
    - make -C test/proto_alpha run-test-transaction

test:proto_alpha:origination:
  <<: *test_definition
  script:
    - make -C test/proto_alpha run-test-origination

test:proto_alpha:endorsement:
  <<: *test_definition
  script:
    - make -C test/proto_alpha run-test-endorsement

test:proto_alpha:vote:
  <<: *test_definition
  script:
    - make -C test/proto_alpha run-test-vote

test:basic.sh:
  <<: *test_definition
  script:
    - make -C test run-basic.sh

test:contracts.sh:
  <<: *test_definition
  script:
    - make -C test run-contracts.sh

## Publishing (small) docker images with tezos binaries

publish:docker:minimal:
  <<: *dind_definition
  stage: publish
  only:
    - master@tezos/tezos
    - alphanet@tezos/tezos
    - zeronet@tezos/tezos
  script:
    - docker pull "${CI_REGISTRY_IMAGE}/build:${CI_BUILD_REF}"
    - ./scripts/create_docker_image.minimal.sh
        "${public_docker_image}" "${CI_BUILD_REF_NAME}"
        "${CI_REGISTRY_IMAGE}/build:${CI_BUILD_REF}"
    - echo "$CI_DOCKER_AUTH" > ~/.docker/config.json ;
    - docker push "${public_docker_image}:${CI_BUILD_REF_NAME}"

## Publish to github...

publish:github:
  image: ocaml/opam
  stage: publish
  only:
    - master@tezos/tezos
    - alphanet@tezos/tezos
  script:
    - echo "${CI_KH}" > ~/.ssh/known_hosts
    - echo "${CI_PK_GITHUB}" > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - rm -fr .git/refs/original
    - if [ "${CI_PROJECT_PATH}" = "tezos/tezos" ] ; then
        ./scripts/apply_patch.sh "${CI_BUILD_REF_NAME}" ;
      fi
    - git filter-branch --prune-empty --index-filter
         'git rm -r --cached --ignore-unmatch
            .gitlab-ci.yml
            "docs/proof of stake.md"
            src/client/embedded/bootstrap/mining/
            scripts/alphanet.sh
            scripts/alphanet_constants.patch
            scripts/alphanet_next.patch
            scripts/zeronet.patch
            scripts/delete_ci_image.sh'
          --env-filter
            'if [ $GIT_COMMIT != "f42e9d12ac75d2876a4cf600d44976b7090d4533" ] ; then
               export GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME" ;
               export GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL" ;
               export GIT_COMMITTER_DATE="$GIT_AUTHOR_DATE" ;
               export GIT_AUTHOR_NAME="Dynamic Ledger Solutions, Inc." ;
               export GIT_AUTHOR_EMAIL="contact@tezos.com" ;
             fi'
         HEAD
    - git push git@github.com:tezos/tezos.git -f HEAD:${CI_BUILD_REF_NAME}

deploy:alphanet:
  image: ocaml/opam
  stage: deploy
  only:
    - alphanet@tezos/tezos
  script:
    - echo "${CI_KH}" > ~/.ssh/known_hosts
    - echo "${CI_PK_ALPHANET}" | tr -d "\r" > ~/.ssh/id_ed25519
    - echo "${CI_SSH_CONFIG}" | tr -d "\r" > ~/.ssh/ssh_config
    - chmod 600 ~/.ssh/id_ed25519
    - ssh -t bootstrap1
    - ssh -t bootstrap2
    - ssh -t bootstrap3
    - ssh -t bootstrap4
    - ssh -t bootstrap5
    - ssh -t bootstrap6
  allow_failure: true

deploy:zeronet:
  image: ocaml/opam
  stage: deploy
  only:
    - zeronet@tezos/tezos
  script:
    - echo "${CI_KH}" > ~/.ssh/known_hosts
    - echo "${CI_PK_ZERONET}" | tr -d "\r" > ~/.ssh/id_ed25519
    - echo "${CI_SSH_CONFIG}" | tr -d "\r" > ~/.ssh/ssh_config
    - chmod 600 ~/.ssh/id_ed25519
    - ssh -t bootstrap1
    - ssh -t bootstrap2
    - ssh -t bootstrap3
    - ssh -t bootstrap4
    - ssh -t bootstrap5
    - ssh -t bootstrap6
  allow_failure: true

cleanup:
  <<: *dind_definition
  stage: cleanup
  script:
    - ./scripts/delete_ci_image.sh gitlab-ci-token "${CI_BUILD_TOKEN}"
         "${CI_PROJECT_PATH_SLUG}/build"
         "${CI_BUILD_REF}"
  ## Temporary allowed failure until image deletion is allowed on gitlab
  ## https://gitlab.com/gitlab-org/gitlab-ce/merge_requests/13248
  allow_failure: true
