(jbuild_version 1)

(rule
 ((targets (environment.ml))
  (action
    (write-file ${@}
      "include Tezos_node_updater.Tezos_protocol_environment.Make(struct let name = \"demo\" end)()"))))

(rule
 ((targets (registerer.ml))
  (action
    (write-file ${@}
       "
let () =
  let module Ignored = Tezos_node_shell.State.Register_embedded_protocol
    (Tezos_embedded_protocol_environment_demo.Environment)
    (Tezos_embedded_raw_protocol_demo.Main)
    (struct
       let hash =
         Some (Tezos_crypto.Protocol_hash.of_b58check_exn
                 \"ProtoDemoDemoDemoDemoDemoDemoDemoDemoDemoDemoD3c8k9\")
       let sources = Tezos_base.Protocol.{
         expected_env = V1 ;
         components = [(* FIXME ?? *)] ;
    } end) in ()"))))

(library
 ((name tezos_embedded_protocol_environment_demo)
  (public_name tezos-embedded-protocol-demo.environment)
  (library_flags (:standard -linkall))
  (libraries (tezos-node-updater))
  (modules (Environment))))

(library
 ((name tezos_embedded_raw_protocol_demo)
  (public_name tezos-embedded-protocol-demo.raw)
  (libraries (tezos_embedded_protocol_environment_demo))
  (library_flags (:standard -linkall))
  (flags (:standard -nopervasives -nostdlib -safe-string
                    -w +a-4-6-7-9-29-32-40..42-44-45-48
                    -warn-error -a+8
                    -open Tezos_embedded_protocol_environment_demo__Environment
                    -open Error_monad
                    -open Hash
                    -open Tezos_data))
  (modules (:standard \ Environment Registerer))))

(library
 ((name tezos_embedded_protocol_demo)
  (public_name tezos-embedded-protocol-demo)
  (library_flags (:standard -linkall))
  (libraries (tezos_embedded_raw_protocol_demo tezos-node-shell))
  (modules (Registerer))))
